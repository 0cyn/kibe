plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name+"-"+project.minecraft_version
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name "Fabric"
        url "http://maven.fabricmc.net/"
        content {
            includeGroup "net.fabricmc"
        }
    }
    maven {
        name "BuildCraft"
        url "https://mod-buildcraft.com/maven"
        content {
            includeGroup "alexiil.mc.lib"
        }
    }
    maven {
        name "Ladysnake Libs"
        url 'https://dl.bintray.com/ladysnake/libs'
        content {
            includeGroup "io.github.ladysnake"
        }
    }
    maven {
        name "JitPack"
        url "https://jitpack.io"
        content {
            includeGroup "com.github.emilyploszaj"
        }
    }
    maven {
        name "NerdHubMC"
        url "https://maven.abusedmaster.xyz/"
        content {
            includeGroup "io.github.onyxstudios.Cardinal-Components-API"
        }
    }
    maven {
        name "TerraformersMC"
        url "https://maven.terraformersmc.com/releases"
        content {
            includeGroup "com.terraformersmc"
            includeGroup "dev.emi"
        }
    }
    maven {
        name "Shedaniel"
        url "https://maven.shedaniel.me/"
        content {
            includeGroup "me.shedaniel"
            includeGroup "me.shedaniel.cloth"
            includeGroup "me.shedaniel.cloth.api"
            includeGroup "me.sargunvohra.mcmods"
        }
    }
    mavenLocal()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    modImplementation ("dev.emi:trinkets:${project.trinkets_version}") {
        exclude group: "io.github.onyxstudios", module: "Cardinal-Components-API"
    }
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cca_version}"

    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")
    include("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")

    modImplementation "io.github.ladysnake:PlayerAbilityLib:${project.pal_version}"
    include "io.github.ladysnake:PlayerAbilityLib:${project.pal_version}"

    modImplementation("alexiil.mc.lib:libblockattributes-core:${project.lba_version}")
    include("alexiil.mc.lib:libblockattributes-core:${project.lba_version}")

    modImplementation("alexiil.mc.lib:libblockattributes-fluids:${project.lba_version}")
    include("alexiil.mc.lib:libblockattributes-fluids:${project.lba_version}")

    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    modImplementation "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"

}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"